# Makefile.in generated by automake 1.10.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Note: All source files are listed in Makefile.sources.

# Generated by configure.  Do not edit.

# Makefile.sources
#
# This file is pretty similar to $(top_srcdir)/src/Makefile.sources,
# but for boilerplate.  Unlike that file, there are no special headers.
#
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = README $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.am.features $(srcdir)/Makefile.in \
	$(top_srcdir)/boilerplate/Makefile.sources \
	$(top_srcdir)/build/Makefile.am.common
EXTRA_PROGRAMS =
check_PROGRAMS = check-link$(EXEEXT)
@CAIRO_HAS_XLIB_SURFACE_TRUE@am__append_1 = $(cairo_boilerplate_xlib_headers)
@CAIRO_HAS_XLIB_SURFACE_TRUE@am__append_2 = $(cairo_boilerplate_xlib_private)
@CAIRO_HAS_XLIB_SURFACE_TRUE@am__append_3 = $(cairo_boilerplate_xlib_sources)
@CAIRO_HAS_XLIB_XRENDER_SURFACE_TRUE@am__append_4 = $(cairo_boilerplate_xlib_xrender_headers)
@CAIRO_HAS_XLIB_XRENDER_SURFACE_TRUE@am__append_5 = $(cairo_boilerplate_xlib_xrender_private)
@CAIRO_HAS_XLIB_XRENDER_SURFACE_TRUE@am__append_6 = $(cairo_boilerplate_xlib_xrender_sources)
@CAIRO_HAS_XCB_SURFACE_TRUE@am__append_7 = $(cairo_boilerplate_xcb_headers)
@CAIRO_HAS_XCB_SURFACE_TRUE@am__append_8 = $(cairo_boilerplate_xcb_private)
@CAIRO_HAS_XCB_SURFACE_TRUE@am__append_9 = $(cairo_boilerplate_xcb_sources)
@CAIRO_HAS_QUARTZ_SURFACE_TRUE@am__append_10 = $(cairo_boilerplate_quartz_headers)
@CAIRO_HAS_QUARTZ_SURFACE_TRUE@am__append_11 = $(cairo_boilerplate_quartz_private)
@CAIRO_HAS_QUARTZ_SURFACE_TRUE@am__append_12 = $(cairo_boilerplate_quartz_sources)
@CAIRO_HAS_QUARTZ_FONT_TRUE@am__append_13 = $(cairo_boilerplate_quartz_font_headers)
@CAIRO_HAS_QUARTZ_FONT_TRUE@am__append_14 = $(cairo_boilerplate_quartz_font_private)
@CAIRO_HAS_QUARTZ_FONT_TRUE@am__append_15 = $(cairo_boilerplate_quartz_font_sources)
@CAIRO_HAS_QUARTZ_IMAGE_SURFACE_TRUE@am__append_16 = $(cairo_boilerplate_quartz_image_headers)
@CAIRO_HAS_QUARTZ_IMAGE_SURFACE_TRUE@am__append_17 = $(cairo_boilerplate_quartz_image_private)
@CAIRO_HAS_QUARTZ_IMAGE_SURFACE_TRUE@am__append_18 = $(cairo_boilerplate_quartz_image_sources)
@CAIRO_HAS_WIN32_SURFACE_TRUE@am__append_19 = $(cairo_boilerplate_win32_headers)
@CAIRO_HAS_WIN32_SURFACE_TRUE@am__append_20 = $(cairo_boilerplate_win32_private)
@CAIRO_HAS_WIN32_SURFACE_TRUE@am__append_21 = $(cairo_boilerplate_win32_sources)
@CAIRO_HAS_WIN32_FONT_TRUE@am__append_22 = $(cairo_boilerplate_win32_font_headers)
@CAIRO_HAS_WIN32_FONT_TRUE@am__append_23 = $(cairo_boilerplate_win32_font_private)
@CAIRO_HAS_WIN32_FONT_TRUE@am__append_24 = $(cairo_boilerplate_win32_font_sources)
@CAIRO_HAS_OS2_SURFACE_TRUE@am__append_25 = $(cairo_boilerplate_os2_headers)
@CAIRO_HAS_OS2_SURFACE_TRUE@am__append_26 = $(cairo_boilerplate_os2_private)
@CAIRO_HAS_OS2_SURFACE_TRUE@am__append_27 = $(cairo_boilerplate_os2_sources)
@CAIRO_HAS_BEOS_SURFACE_TRUE@am__append_28 = $(cairo_boilerplate_beos_headers)
@CAIRO_HAS_BEOS_SURFACE_TRUE@am__append_29 = $(cairo_boilerplate_beos_private)
@CAIRO_HAS_BEOS_SURFACE_TRUE@am__append_30 = $(cairo_boilerplate_beos_sources)
@CAIRO_HAS_PNG_FUNCTIONS_TRUE@am__append_31 = $(cairo_boilerplate_png_headers)
@CAIRO_HAS_PNG_FUNCTIONS_TRUE@am__append_32 = $(cairo_boilerplate_png_private)
@CAIRO_HAS_PNG_FUNCTIONS_TRUE@am__append_33 = $(cairo_boilerplate_png_sources)
@CAIRO_HAS_GLITZ_SURFACE_TRUE@am__append_34 = $(cairo_boilerplate_glitz_headers)
@CAIRO_HAS_GLITZ_SURFACE_TRUE@am__append_35 = $(cairo_boilerplate_glitz_private)
@CAIRO_HAS_GLITZ_SURFACE_TRUE@am__append_36 = $(cairo_boilerplate_glitz_sources)
@CAIRO_HAS_DIRECTFB_SURFACE_TRUE@am__append_37 = $(cairo_boilerplate_directfb_headers)
@CAIRO_HAS_DIRECTFB_SURFACE_TRUE@am__append_38 = $(cairo_boilerplate_directfb_private)
@CAIRO_HAS_DIRECTFB_SURFACE_TRUE@am__append_39 = $(cairo_boilerplate_directfb_sources)
@CAIRO_HAS_FT_FONT_TRUE@am__append_40 = $(cairo_boilerplate_ft_headers)
@CAIRO_HAS_FT_FONT_TRUE@am__append_41 = $(cairo_boilerplate_ft_private)
@CAIRO_HAS_FT_FONT_TRUE@am__append_42 = $(cairo_boilerplate_ft_sources)
@CAIRO_HAS_PS_SURFACE_TRUE@am__append_43 = $(cairo_boilerplate_ps_headers)
@CAIRO_HAS_PS_SURFACE_TRUE@am__append_44 = $(cairo_boilerplate_ps_private)
@CAIRO_HAS_PS_SURFACE_TRUE@am__append_45 = $(cairo_boilerplate_ps_sources)
@CAIRO_HAS_PDF_SURFACE_TRUE@am__append_46 = $(cairo_boilerplate_pdf_headers)
@CAIRO_HAS_PDF_SURFACE_TRUE@am__append_47 = $(cairo_boilerplate_pdf_private)
@CAIRO_HAS_PDF_SURFACE_TRUE@am__append_48 = $(cairo_boilerplate_pdf_sources)
@CAIRO_HAS_SVG_SURFACE_TRUE@am__append_49 = $(cairo_boilerplate_svg_headers)
@CAIRO_HAS_SVG_SURFACE_TRUE@am__append_50 = $(cairo_boilerplate_svg_private)
@CAIRO_HAS_SVG_SURFACE_TRUE@am__append_51 = $(cairo_boilerplate_svg_sources)
@CAIRO_HAS_TEST_SURFACES_TRUE@am__append_52 = $(cairo_boilerplate_test_surfaces_private) $(cairo_boilerplate_test_surfaces_headers)
@CAIRO_HAS_TEST_SURFACES_TRUE@am__append_53 = $(cairo_boilerplate_test_surfaces_sources)

# BeOS system headers trigger this warning
@CAIRO_HAS_BEOS_SURFACE_TRUE@am__append_54 = -Wno-multichar
@CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_TRUE@am__append_55 = $(GLITZ_AGL_LIBS)
@CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_TRUE@am__append_56 = $(GLITZ_EGL_LIBS)
@CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_TRUE@am__append_57 = $(GLITZ_GLX_LIBS)
@CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_TRUE@am__append_58 = $(GLITZ_WGL_LIBS)
@CAIRO_HAS_WIN32_SURFACE_TRUE@am__append_59 = -lwinspool
@CROSS_COMPILING_FALSE@am__append_60 = check-link$(EXEEXT)
subdir = boilerplate
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build/aclocal.cairo.m4 \
	$(top_srcdir)/build/aclocal.compare.m4 \
	$(top_srcdir)/build/aclocal.dolt.m4 \
	$(top_srcdir)/build/aclocal.enable.m4 \
	$(top_srcdir)/build/aclocal.float.m4 \
	$(top_srcdir)/build/aclocal.gtk-doc.m4 \
	$(top_srcdir)/build/aclocal.makefile.m4 \
	$(top_srcdir)/build/aclocal.pkg.m4 \
	$(top_srcdir)/build/libtool.m4 \
	$(top_srcdir)/build/ltoptions.m4 \
	$(top_srcdir)/build/ltsugar.m4 \
	$(top_srcdir)/build/ltversion.m4 \
	$(top_srcdir)/build/lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/cairo-version.h \
	$(top_srcdir)/build/configure.ac.version \
	$(top_srcdir)/build/configure.ac.tools \
	$(top_srcdir)/build/configure.ac.system \
	$(top_srcdir)/build/configure.ac.features \
	$(top_srcdir)/build/configure.ac.warnings \
	$(top_srcdir)/build/configure.ac.analysis \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__DEPENDENCIES_1 =
@CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_TRUE@am__DEPENDENCIES_2 =  \
@CAIRO_CAN_TEST_GLITZ_AGL_SURFACE_TRUE@	$(am__DEPENDENCIES_1)
@CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_TRUE@am__DEPENDENCIES_3 =  \
@CAIRO_CAN_TEST_GLITZ_EGL_SURFACE_TRUE@	$(am__DEPENDENCIES_1)
@CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_TRUE@am__DEPENDENCIES_4 =  \
@CAIRO_CAN_TEST_GLITZ_GLX_SURFACE_TRUE@	$(am__DEPENDENCIES_1)
@CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_TRUE@am__DEPENDENCIES_5 =  \
@CAIRO_CAN_TEST_GLITZ_WGL_SURFACE_TRUE@	$(am__DEPENDENCIES_1)
libcairoboilerplate_la_DEPENDENCIES = $(top_builddir)/src/libcairo.la \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_1)
am__libcairoboilerplate_la_SOURCES_DIST = cairo-boilerplate-getopt.h \
	cairo-boilerplate-scaled-font.h cairo-boilerplate-system.h \
	cairo-boilerplate.h cairo-boilerplate-xlib.h \
	cairo-boilerplate-xlib-private.h \
	cairo-boilerplate-xcb-private.h \
	cairo-boilerplate-quartz-private.h \
	cairo-boilerplate-win32-private.h \
	cairo-boilerplate-beos-private.h \
	cairo-boilerplate-glitz-private.h \
	cairo-boilerplate-directfb-private.h \
	cairo-boilerplate-ps-private.h cairo-boilerplate-pdf-private.h \
	cairo-boilerplate-svg-private.h \
	cairo-boilerplate-test-surfaces-private.h \
	cairo-boilerplate-getopt.c cairo-boilerplate-system.c \
	cairo-boilerplate.c cairo-boilerplate-xlib.c \
	cairo-boilerplate-xcb.c cairo-boilerplate-quartz.c \
	cairo-boilerplate-win32.c cairo-boilerplate-win32-printing.c \
	cairo-boilerplate-glitz.c cairo-boilerplate-directfb.c \
	cairo-boilerplate-ps.c cairo-boilerplate-pdf.c \
	cairo-boilerplate-svg.c cairo-boilerplate-test-surfaces.c
am__objects_1 =
@CAIRO_HAS_XLIB_SURFACE_TRUE@am__objects_2 = $(am__objects_1)
am__objects_3 = $(am__objects_1) $(am__objects_2) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1)
@CAIRO_HAS_XCB_SURFACE_TRUE@am__objects_4 = $(am__objects_1)
@CAIRO_HAS_QUARTZ_SURFACE_TRUE@am__objects_5 = $(am__objects_1)
@CAIRO_HAS_WIN32_SURFACE_TRUE@am__objects_6 = $(am__objects_1)
@CAIRO_HAS_BEOS_SURFACE_TRUE@am__objects_7 = $(am__objects_1)
@CAIRO_HAS_GLITZ_SURFACE_TRUE@am__objects_8 = $(am__objects_1)
@CAIRO_HAS_DIRECTFB_SURFACE_TRUE@am__objects_9 = $(am__objects_1)
@CAIRO_HAS_PS_SURFACE_TRUE@am__objects_10 = $(am__objects_1)
@CAIRO_HAS_PDF_SURFACE_TRUE@am__objects_11 = $(am__objects_1)
@CAIRO_HAS_SVG_SURFACE_TRUE@am__objects_12 = $(am__objects_1)
@CAIRO_HAS_TEST_SURFACES_TRUE@am__objects_13 = $(am__objects_1)
am__objects_14 = $(am__objects_2) $(am__objects_1) $(am__objects_4) \
	$(am__objects_5) $(am__objects_1) $(am__objects_1) \
	$(am__objects_6) $(am__objects_1) $(am__objects_1) \
	$(am__objects_7) $(am__objects_1) $(am__objects_8) \
	$(am__objects_9) $(am__objects_1) $(am__objects_10) \
	$(am__objects_11) $(am__objects_12) $(am__objects_13)
am__objects_15 = cairo-boilerplate-getopt.lo \
	cairo-boilerplate-system.lo cairo-boilerplate.lo
am__objects_16 = cairo-boilerplate-xlib.lo
@CAIRO_HAS_XLIB_SURFACE_TRUE@am__objects_17 = $(am__objects_16)
am__objects_18 = cairo-boilerplate-xcb.lo
@CAIRO_HAS_XCB_SURFACE_TRUE@am__objects_19 = $(am__objects_18)
am__objects_20 = cairo-boilerplate-quartz.lo
@CAIRO_HAS_QUARTZ_SURFACE_TRUE@am__objects_21 = $(am__objects_20)
am__objects_22 = cairo-boilerplate-win32.lo \
	cairo-boilerplate-win32-printing.lo
@CAIRO_HAS_WIN32_SURFACE_TRUE@am__objects_23 = $(am__objects_22)
am__objects_24 = cairo-boilerplate-glitz.lo
@CAIRO_HAS_GLITZ_SURFACE_TRUE@am__objects_25 = $(am__objects_24)
am__objects_26 = cairo-boilerplate-directfb.lo
@CAIRO_HAS_DIRECTFB_SURFACE_TRUE@am__objects_27 = $(am__objects_26)
am__objects_28 = cairo-boilerplate-ps.lo
@CAIRO_HAS_PS_SURFACE_TRUE@am__objects_29 = $(am__objects_28)
am__objects_30 = cairo-boilerplate-pdf.lo
@CAIRO_HAS_PDF_SURFACE_TRUE@am__objects_31 = $(am__objects_30)
am__objects_32 = cairo-boilerplate-svg.lo
@CAIRO_HAS_SVG_SURFACE_TRUE@am__objects_33 = $(am__objects_32)
am__objects_34 = cairo-boilerplate-test-surfaces.lo
@CAIRO_HAS_TEST_SURFACES_TRUE@am__objects_35 = $(am__objects_34)
am__objects_36 = $(am__objects_15) $(am__objects_17) $(am__objects_1) \
	$(am__objects_19) $(am__objects_21) $(am__objects_1) \
	$(am__objects_1) $(am__objects_23) $(am__objects_1) \
	$(am__objects_1) $(am__objects_1) $(am__objects_1) \
	$(am__objects_25) $(am__objects_27) $(am__objects_1) \
	$(am__objects_29) $(am__objects_31) $(am__objects_33) \
	$(am__objects_35)
am_libcairoboilerplate_la_OBJECTS = $(am__objects_3) $(am__objects_14) \
	$(am__objects_36)
libcairoboilerplate_la_OBJECTS = $(am_libcairoboilerplate_la_OBJECTS)
check_link_SOURCES = check-link.c
check_link_OBJECTS = check-link.$(OBJEXT)
check_link_DEPENDENCIES = libcairoboilerplate.la
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libcairoboilerplate_la_SOURCES) check-link.c
DIST_SOURCES = $(am__libcairoboilerplate_la_SOURCES_DIST) check-link.c
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CAIROPERF_LIBS = @CAIROPERF_LIBS@
CAIRO_CFLAGS = @CAIRO_CFLAGS@
CAIRO_LIBS = @CAIRO_LIBS@
CAIRO_LIBTOOL_VERSION_INFO = @CAIRO_LIBTOOL_VERSION_INFO@
CAIRO_NONPKGCONFIG_CFLAGS = @CAIRO_NONPKGCONFIG_CFLAGS@
CAIRO_NONPKGCONFIG_LIBS = @CAIRO_NONPKGCONFIG_LIBS@
CAIRO_RELEASE_STATUS = @CAIRO_RELEASE_STATUS@
CAIRO_REQUIRES = @CAIRO_REQUIRES@
CAIRO_TEST_UNDEFINED_LDFLAGS = @CAIRO_TEST_UNDEFINED_LDFLAGS@
CAIRO_VERSION_MAJOR = @CAIRO_VERSION_MAJOR@
CAIRO_VERSION_MICRO = @CAIRO_VERSION_MICRO@
CAIRO_VERSION_MINOR = @CAIRO_VERSION_MINOR@
CAIRO_VERSION_SONUM = @CAIRO_VERSION_SONUM@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOLT_BASH = @DOLT_BASH@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FIND = @FIND@
FONTCONFIG_CFLAGS = @FONTCONFIG_CFLAGS@
FONTCONFIG_LIBS = @FONTCONFIG_LIBS@
FREETYPE_CFLAGS = @FREETYPE_CFLAGS@
FREETYPE_CONFIG = @FREETYPE_CONFIG@
FREETYPE_LIBS = @FREETYPE_LIBS@
GLITZ_AGL_CFLAGS = @GLITZ_AGL_CFLAGS@
GLITZ_AGL_LIBS = @GLITZ_AGL_LIBS@
GLITZ_EGL_CFLAGS = @GLITZ_EGL_CFLAGS@
GLITZ_EGL_LIBS = @GLITZ_EGL_LIBS@
GLITZ_GLX_CFLAGS = @GLITZ_GLX_CFLAGS@
GLITZ_GLX_LIBS = @GLITZ_GLX_LIBS@
GLITZ_WGL_CFLAGS = @GLITZ_WGL_CFLAGS@
GLITZ_WGL_LIBS = @GLITZ_WGL_LIBS@
GREP = @GREP@
GS = @GS@
GTKDOC_CHECK = @GTKDOC_CHECK@
HTML_DIR = @HTML_DIR@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBM = @LIBM@
LIBOBJS = @LIBOBJS@
LIBRSVG_CFLAGS = @LIBRSVG_CFLAGS@
LIBRSVG_LIBS = @LIBRSVG_LIBS@
LIBS = @LIBS@
LIBSPECTRE_CFLAGS = @LIBSPECTRE_CFLAGS@
LIBSPECTRE_LIBS = @LIBSPECTRE_LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTCOMPILE = @LTCOMPILE@
LTCXXCOMPILE = @LTCXXCOMPILE@
LTLIBOBJS = @LTLIBOBJS@
LTP = @LTP@
LTP_GENHTML = @LTP_GENHTML@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKGCONFIG_REQUIRES = @PKGCONFIG_REQUIRES@
PKG_CONFIG = @PKG_CONFIG@
POPPLER_CFLAGS = @POPPLER_CFLAGS@
POPPLER_LIBS = @POPPLER_LIBS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHTOOL = @SHTOOL@
STRIP = @STRIP@
VALGRIND_CFLAGS = @VALGRIND_CFLAGS@
VALGRIND_LIBS = @VALGRIND_LIBS@
VERSION = @VERSION@
XARGS = @XARGS@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
directfb_CFLAGS = @directfb_CFLAGS@
directfb_LIBS = @directfb_LIBS@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
glitz_CFLAGS = @glitz_CFLAGS@
glitz_LIBS = @glitz_LIBS@
gtk_CFLAGS = @gtk_CFLAGS@
gtk_LIBS = @gtk_LIBS@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pixman_CFLAGS = @pixman_CFLAGS@
pixman_LIBS = @pixman_LIBS@
png_CFLAGS = @png_CFLAGS@
png_LIBS = @png_LIBS@
png_REQUIRES = @png_REQUIRES@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
xcb_CFLAGS = @xcb_CFLAGS@
xcb_LIBS = @xcb_LIBS@
xlib_CFLAGS = @xlib_CFLAGS@
xlib_LIBS = @xlib_LIBS@
xlib_xrender_CFLAGS = @xlib_xrender_CFLAGS@
xlib_xrender_LIBS = @xlib_xrender_LIBS@
BUILT_SOURCES = 
CLEANFILES = *.i *.s *.gch $(EXTRA_LTLIBRARIES) $(EXTRA_PROGRAMS) \
	$(check_PROGRAMS)
DISTCLEANFILES = $(BUILT_SOURCES)
EXTRA_DIST = Makefile.win32 Makefile.win32.features
EXTRA_LTLIBRARIES = libcairoboilerplate.la
MAINTAINERCLEANFILES = Makefile.in $(srcdir)/Makefile.win32.features
TESTS = $(am__append_60)
cairo_boilerplate_headers = \
	cairo-boilerplate-getopt.h \
	cairo-boilerplate-scaled-font.h \
	cairo-boilerplate-system.h \
	cairo-boilerplate.h \
	$(NULL)

cairo_boilerplate_sources = \
	cairo-boilerplate-getopt.c \
	cairo-boilerplate-system.c \
	cairo-boilerplate.c \
	$(NULL)


# automake is stupid enough to always use c++ linker if we enable the
# following lines, even if beos surface is not enabled.  Disable it for now.
cairo_boilerplate_beos_private = cairo-boilerplate-beos-private.h
#libcairoboilerplate_la_SOURCES += cairo-boilerplate-beos.cpp
cairo_boilerplate_directfb_private = cairo-boilerplate-directfb-private.h
cairo_boilerplate_directfb_sources = cairo-boilerplate-directfb.c
cairo_boilerplate_glitz_private = cairo-boilerplate-glitz-private.h
cairo_boilerplate_glitz_sources = cairo-boilerplate-glitz.c
cairo_boilerplate_pdf_private = cairo-boilerplate-pdf-private.h
cairo_boilerplate_pdf_sources = cairo-boilerplate-pdf.c
cairo_boilerplate_ps_private = cairo-boilerplate-ps-private.h
cairo_boilerplate_ps_sources = cairo-boilerplate-ps.c
cairo_boilerplate_quartz_private = cairo-boilerplate-quartz-private.h
cairo_boilerplate_quartz_sources = cairo-boilerplate-quartz.c
cairo_boilerplate_svg_private = cairo-boilerplate-svg-private.h
cairo_boilerplate_svg_sources = cairo-boilerplate-svg.c
cairo_boilerplate_test_surfaces_private = cairo-boilerplate-test-surfaces-private.h
cairo_boilerplate_test_surfaces_sources = cairo-boilerplate-test-surfaces.c
cairo_boilerplate_win32_private = cairo-boilerplate-win32-private.h
cairo_boilerplate_win32_sources = cairo-boilerplate-win32.c cairo-boilerplate-win32-printing.c
cairo_boilerplate_xcb_private = cairo-boilerplate-xcb-private.h
cairo_boilerplate_xcb_sources = cairo-boilerplate-xcb.c
cairo_boilerplate_xlib_headers = cairo-boilerplate-xlib.h
cairo_boilerplate_xlib_private = cairo-boilerplate-xlib-private.h
cairo_boilerplate_xlib_sources = cairo-boilerplate-xlib.c
supported_cairo_boilerplate_headers = $(cairo_boilerplate_headers) \
	$(cairo_boilerplate_xlib_headers) \
	$(cairo_boilerplate_xlib_xrender_headers) \
	$(cairo_boilerplate_quartz_headers) \
	$(cairo_boilerplate_quartz_font_headers) \
	$(cairo_boilerplate_win32_headers) \
	$(cairo_boilerplate_win32_font_headers) \
	$(cairo_boilerplate_png_headers) \
	$(cairo_boilerplate_ft_headers) \
	$(cairo_boilerplate_ps_headers) \
	$(cairo_boilerplate_pdf_headers) \
	$(cairo_boilerplate_svg_headers) \
	$(cairo_boilerplate_image_headers) \
	$(cairo_boilerplate_user_headers)
unsupported_cairo_boilerplate_headers =  \
	$(cairo_boilerplate_xcb_headers) \
	$(cairo_boilerplate_quartz_image_headers) \
	$(cairo_boilerplate_os2_headers) \
	$(cairo_boilerplate_beos_headers) \
	$(cairo_boilerplate_glitz_headers) \
	$(cairo_boilerplate_directfb_headers)
all_cairo_boilerplate_files = $(all_cairo_boilerplate_headers) $(all_cairo_boilerplate_private) $(all_cairo_boilerplate_sources)
all_cairo_boilerplate_headers = $(cairo_boilerplate_headers) \
	$(cairo_boilerplate_xlib_headers) \
	$(cairo_boilerplate_xlib_xrender_headers) \
	$(cairo_boilerplate_xcb_headers) \
	$(cairo_boilerplate_quartz_headers) \
	$(cairo_boilerplate_quartz_font_headers) \
	$(cairo_boilerplate_quartz_image_headers) \
	$(cairo_boilerplate_win32_headers) \
	$(cairo_boilerplate_win32_font_headers) \
	$(cairo_boilerplate_os2_headers) \
	$(cairo_boilerplate_beos_headers) \
	$(cairo_boilerplate_png_headers) \
	$(cairo_boilerplate_glitz_headers) \
	$(cairo_boilerplate_directfb_headers) \
	$(cairo_boilerplate_ft_headers) \
	$(cairo_boilerplate_ps_headers) \
	$(cairo_boilerplate_pdf_headers) \
	$(cairo_boilerplate_svg_headers) \
	$(cairo_boilerplate_image_headers) \
	$(cairo_boilerplate_user_headers)
all_cairo_boilerplate_private = $(cairo_boilerplate_private) \
	$(cairo_boilerplate_xlib_private) \
	$(cairo_boilerplate_xlib_xrender_private) \
	$(cairo_boilerplate_xcb_private) \
	$(cairo_boilerplate_quartz_private) \
	$(cairo_boilerplate_quartz_font_private) \
	$(cairo_boilerplate_quartz_image_private) \
	$(cairo_boilerplate_win32_private) \
	$(cairo_boilerplate_win32_font_private) \
	$(cairo_boilerplate_os2_private) \
	$(cairo_boilerplate_beos_private) \
	$(cairo_boilerplate_png_private) \
	$(cairo_boilerplate_glitz_private) \
	$(cairo_boilerplate_directfb_private) \
	$(cairo_boilerplate_ft_private) \
	$(cairo_boilerplate_ps_private) \
	$(cairo_boilerplate_pdf_private) \
	$(cairo_boilerplate_svg_private) \
	$(cairo_boilerplate_test_surfaces_private) \
	$(cairo_boilerplate_test_surfaces_headers) \
	$(cairo_boilerplate_image_private) \
	$(cairo_boilerplate_user_private)
all_cairo_boilerplate_sources = $(cairo_boilerplate_sources) \
	$(cairo_boilerplate_xlib_sources) \
	$(cairo_boilerplate_xlib_xrender_sources) \
	$(cairo_boilerplate_xcb_sources) \
	$(cairo_boilerplate_quartz_sources) \
	$(cairo_boilerplate_quartz_font_sources) \
	$(cairo_boilerplate_quartz_image_sources) \
	$(cairo_boilerplate_win32_sources) \
	$(cairo_boilerplate_win32_font_sources) \
	$(cairo_boilerplate_os2_sources) \
	$(cairo_boilerplate_beos_sources) \
	$(cairo_boilerplate_png_sources) \
	$(cairo_boilerplate_glitz_sources) \
	$(cairo_boilerplate_directfb_sources) \
	$(cairo_boilerplate_ft_sources) \
	$(cairo_boilerplate_ps_sources) \
	$(cairo_boilerplate_pdf_sources) \
	$(cairo_boilerplate_svg_sources) \
	$(cairo_boilerplate_test_surfaces_sources) \
	$(cairo_boilerplate_image_sources) \
	$(cairo_boilerplate_user_sources)
enabled_cairo_boilerplate_files = $(enabled_cairo_boilerplate_headers) $(enabled_cairo_boilerplate_private) $(enabled_cairo_boilerplate_sources)
enabled_cairo_boilerplate_headers = $(cairo_boilerplate_headers) \
	$(am__append_1) $(am__append_4) $(am__append_7) \
	$(am__append_10) $(am__append_13) $(am__append_16) \
	$(am__append_19) $(am__append_22) $(am__append_25) \
	$(am__append_28) $(am__append_31) $(am__append_34) \
	$(am__append_37) $(am__append_40) $(am__append_43) \
	$(am__append_46) $(am__append_49) \
	$(cairo_boilerplate_image_headers) \
	$(cairo_boilerplate_user_headers)
enabled_cairo_boilerplate_private = $(cairo_boilerplate_private) \
	$(am__append_2) $(am__append_5) $(am__append_8) \
	$(am__append_11) $(am__append_14) $(am__append_17) \
	$(am__append_20) $(am__append_23) $(am__append_26) \
	$(am__append_29) $(am__append_32) $(am__append_35) \
	$(am__append_38) $(am__append_41) $(am__append_44) \
	$(am__append_47) $(am__append_50) $(am__append_52) \
	$(cairo_boilerplate_image_private) \
	$(cairo_boilerplate_user_private)
enabled_cairo_boilerplate_sources = $(cairo_boilerplate_sources) \
	$(am__append_3) $(am__append_6) $(am__append_9) \
	$(am__append_12) $(am__append_15) $(am__append_18) \
	$(am__append_21) $(am__append_24) $(am__append_27) \
	$(am__append_30) $(am__append_33) $(am__append_36) \
	$(am__append_39) $(am__append_42) $(am__append_45) \
	$(am__append_48) $(am__append_51) $(am__append_53) \
	$(cairo_boilerplate_image_sources) \
	$(cairo_boilerplate_user_sources)
AM_CPPFLAGS = -I$(srcdir) -I$(top_builddir)/src -I$(top_srcdir)/src \
	$(CAIRO_CFLAGS) $(NULL) $(am__append_54)
libcairoboilerplate_la_SOURCES = \
	$(enabled_cairo_boilerplate_headers) \
	$(enabled_cairo_boilerplate_private) \
	$(enabled_cairo_boilerplate_sources) \
	$(NULL)

libcairoboilerplate_la_LIBADD = $(top_builddir)/src/libcairo.la \
	$(am__append_55) $(am__append_56) $(am__append_57) \
	$(am__append_58) $(am__append_59)
check_link_LDADD = libcairoboilerplate.la
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/build/Makefile.am.common $(srcdir)/Makefile.am.features $(top_srcdir)/boilerplate/Makefile.sources $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  boilerplate/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  boilerplate/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
libcairoboilerplate.la: $(libcairoboilerplate_la_OBJECTS) $(libcairoboilerplate_la_DEPENDENCIES) 
	$(LINK)  $(libcairoboilerplate_la_OBJECTS) $(libcairoboilerplate_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
check-link$(EXEEXT): $(check_link_OBJECTS) $(check_link_DEPENDENCIES) 
	@rm -f check-link$(EXEEXT)
	$(LINK) $(check_link_OBJECTS) $(check_link_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-directfb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-getopt.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-glitz.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-pdf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-ps.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-quartz.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-svg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-system.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-test-surfaces.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-win32-printing.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-win32.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-xcb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate-xlib.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cairo-boilerplate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check-link.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


test: check
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
